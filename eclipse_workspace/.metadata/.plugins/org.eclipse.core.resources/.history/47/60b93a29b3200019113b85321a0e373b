/*
 * dm03_maskbit.cpp
 *
 *  Created on: Jan 24, 2019
 *      Author: lisujia
 */


#include "opencv2/opencv.hpp"
#include <iostream>
#include <cmath>

using namespace cv;
using namespace std;

int test_dm03() {
	Mat src, dst;
	src = cv::imread("/Users/lisujia/Desktop/test.jpg", ImreadModes::IMREAD_COLOR);

	if (!src.data) {
		cout << "can't load image" << endl;
		return -1;
	}

	namedWindow("Display Image", WINDOW_AUTOSIZE);
	imshow("Display Image", src);

	int cols = (src.cols - 1) * src.channels();
	int col_step = src.channels();
	int rows = src.rows - 1;
	dst = Mat::zeros(src.size(), src.type());

//	[0 -1 0]
//	[-1 5 -1]
//	[0 -1 0]
	for (int i = 1; i < rows; i++) {
		uchar *pre_row = src.ptr<uchar>(i - 1);
		uchar *cur_row = src.ptr<uchar>(i);
		uchar *nxt_row = src.ptr<uchar>(i + 1);

		uchar *output_cur_row = dst.ptr<uchar>(i);

		for (int j = col_step; j < cols; j++) {
			output_cur_row[j] = saturate_cast<uchar>(5 * cur_row[j] -
					pre_row[j] -
					nxt_row[j] -
					cur_row[j - col_step] -
					cur_row[j + col_step]);
		}
	}
	imshow("Display Image", src);

	namedWindow("after Image", WINDOW_AUTOSIZE);
	imshow("after Image", dst);
	waitKey(0);
	return 0;
}
